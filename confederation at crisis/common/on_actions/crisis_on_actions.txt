# Events listed here run for every living character at game start, that means they				
# ALWAYS need to check if they should run.				
on_yearly_pulse = {				
	events = {				
		63106 # (Safety flag clearance check event)		
		
		43306 #Yearly check for tyranny from going against council		
		
				
		Plus.2500 # Add decadent dynasty trait		
		Plus.2502 # Raise decadent dynasty trait				
		Plus.307 # Contingent Territory Check		
		Plus.371 # Main Maintenance Event		
		
		
		# TRIBUTARY EVENTS		
		Plus.4010 # Tributes for AI		
		
		# AI vassal has a vassal too far away		
		Plus.1757		
		
		
		PerformancePlus.900 # Councillor tries to befriend liege		
		PerformanceSoA.4020 # Character converts to local religion		
		PerformancePlus.910 # Duelist tries to befriend liege		
		Performance.941 # Reinforcements Arrive		
		Performance320.500 # Prosperity Increase		
		Performance320.502 # Peasant Obstructionism		
		
		Plus.1771 #Education pulse tombola event		
	}			
	random_events = {			

		
		# Imperial Decadence Events		
		50 = Plus.1855 # Emperor/Regent is Just		
		50 = Plus.1856 # Emperor/Regent is Arbitrary		
		50 = Plus.1857 # Emperor/Regent is Diligent		
		50 = Plus.1858 # Emperor/Regent is Slothful		
		50 = Plus.1859 # Emperor/Regent is Hedonist		
		50 = Plus.1860 # Emperor/Regent is Cruel/Impaler		
		100 = Plus.1861 # Emperor/Regent is Quick/Genius		
		100 = Plus.1862 # Emperor/Regent is Inbred/Imbecile/Slow		
		100 = Plus.1863 # Emperor is Incapable		
		50 = Plus.1864 # Emperor/Regent is Drunkard		
		100 = Plus.1865 # Emperor/Regent is Lunatic		
		50 = Plus.1866 # Emperor/Regent is Possessed		
		25 = Plus.1867 # Emperor/Regent is Depressed		
		50 = Plus.1868 # Emperor is a prisoner		
		50 = Plus.1869 # Emperor has a capable Steward		
		50 = Plus.1870 # Emperor has a lousy Steward		
	}			
}				
# any leader in battle on winning side is ROOT - opponent army leader is FROM				
on_major_battle_won = {				
	events = {			
		Plus.3384 # Imperial Guard distinguishes himself in victory		
	}			
}								

# Losing army owner is ROOT - opponent army owner is FROM				
on_battle_lost_owner = {				
	events = {			
		Plus.362 # Rebel/Adventurer imprisoned after loss		
	}			
}				

#character. Triggers if someone is exiled				
on_exiled = {				
	events = {			
		Plus.110 #Removal of Estates		
	}			
}				

on_death = {				
	events = {			
		#650 Clears diplomatic immunity for faction members		
		20355 # Heir inherits half of the spy network value		
		24500 # Mourning event check for dying wife		
		24502 # Mourning event check for dying son		
		
		70041 # Tournament ends if ruler dies		
		
		CM.10010 # Chronicle entry		
		CM.6185 # Dies of other causes while assassination is in progress - clear flags		
		
		ZE.1030 # Daughter becomes disobedient - killed lover		
		ZE.1040 # Daughter becomes disobedient - killed friend		
		532 #Clears regents if heir has one already		
		RIP.4400 #Nicknames for executions		
		GR.10		
		MNM.6844 #Removes mark of death block for Assassins GM		
		MNM.6991 #Clears any quests targeting this character		
		MNM.6012 #Transfers assassins debt to heir		
		MNM.1415 #Announces hermetics apprentice death		
		
		TOG.1055 # Nationalist revolter dies		
		Plus.111 # Estates passed onto children		
		Plus.306 # Inherit Half of Dishonourable and Tyrant		
		Plus.321 # Remove Favored Son trait		
		
		Plus.304 # Pass down lifetime appointments law to heir		
		
		Plus.1130 # Remove Disinherited trait		
		Plus.1213 # Ruler has died, the coronation is cancelled		
		
		FemRule.300 # Usurper husband dies but has no living sons by usurped wife		
		FemRule.303 # Usurped wife dies but has no living sons by usurper husband		
		Plus.348 # Viceroys pass on wealth to a relative		
		Plus.136 # Tanist titles give strong claims to non-inheriting children		
		Plus.138 # Feudal Elective titles gives strong non-inheritable claims to Pretenders		
		Plus.1610 # King/Emperor dies at low CA with possibly unsuitable heir		
		
		Plus.411 # Ruler dies who is a tributary or has them		
		Plus.2655 # Nomadic ruler of a large realm dies with multiple sons		
		Plus.3329 # Ruler dies while a relative is away at the capital		
		
		
		#Plus.1761 # Player dies with non-dynasty heir		
		Plus.1767 # hired educator dies		
		
		cotc_artifact.1000 # If you have any ships being commissioned, your heir now has to deal with potential complications
	}			
	random_events = {			
		1 = RIP.29800 #reincarnation investigation		
		10 = 24505 # Suspicious death		
		10 = 24510 # Death of a Councillor		
		25 = RIP.29000 #Lovers/rivals/friends react		
		100 = MNM.1207 # Hermetic Scrying vision fulfilled		
	}			
}				


# When rebels appear				
on_rebel_revolt = {				
	events = {			
		600		"# Only valid without ""The Old Gods"" DLC"
		TOG.1010 		
		TOG.1030 		
		TOG.1050 		
		TOG.1070 		
		TOG.1090		
		TOG.1000 		
		TOG.1020		
		TOG.1040		
		TOG.1060		
		TOG.1080		
		HL.2010		# Minor Clan rebels reinforced
		HL.2000		# Minor Clan rebels rise up
	}			
}				

# ROOT is the creating character, FROM is the title				
on_create_title = {				
	events = {			
		CM.10021		
		CM.1501		
		Plus.2289 # Check relations between Greek and Latin Chalcedonian realms		
		PlusFaction.216 # Update matrilineal marriage status for created titles		
		Plus.565 # Determine the name and CoA for Polish kingdom		
	}			
}				

# gain_title, create_title, grant_title - on_new_holder				
# usurp_title - on_new_holder_usurpation				
# inheritance, abdicate - on_new_holder_inheritance				

# ROOT is the character, FROM is the title, FROMFROM is the old holder				
on_new_holder = {				
	events = {			
		HL.4999 #Preserve Nomad Culture		
		HL.4996 #Clear Nomad Agitation when conquered by a non-nomad		
		HL.4812 #Clear nomadic pillage holding modifiers upon succession/conquest		
		HL.4811 #Clear the 'Rampaging Nomads'-Modifier when conquered by a non-nomad		
		HL.140 #Landless nomad gains a title.		
		60504 #Landless status clean-up for e_mongol_empire.		
		#ZE.7000 #Check for Gain Any Title ambition.		
		Plus.351 # Adds province chaos modifier		
		Plus.356 # Removes claims for dead rulers		
		ZE.6010 #ambition event for unlanded son.		
		RIP.12098 #check if we need to remove in_seclusion.		
		RIP.11715 #Removes crown focus on new holder		
		533		

		SSI.40 #Aztecs conquer X events		
		SSI.41		
		SSI.42		
		SSI.43		
		SSI.44		
		SSI.45		
		SSI.46		
		SSI.47		
		SSI.48		
		Plus.359 # Removes religion head title if wrong religion		
		Plus.1853 # Emperor inherits a second imperial title and must choose between them		
		Plus.1850 # Decadence check for imperial titles		
		PlusFaction.213 # Check for invalidated succession law		
		Plus.364 # Fix Gender + Succession law when passed over		
		
		43305 #handle tyranny for going against council		
		
		Plus.1759 # Small demesne modifier		
		Plus.1760 # Overextended republic		
		Plus.370 #Gender law Plus		
		Plus.2680 # Clean up pillage flag		
		
		# Clean up zoroastrian pets on province modifiers in case capital lost		
		ZP.6 		
	}			
}				

# ROOT is the character, FROM is the title, FROMFROM is the old holder				
on_new_holder_inheritance = {				
	events = {			
		HL.4812 #Clear nomadic pillage holding modifiers upon succession/conquest		
		CM.10039 #Chronicle entry		
		HL.140 #Landless nomad gains a title.		
		60504 #Landless status clean-up for e_mongol_empire.		
		RIP.11715 #Removes crown focus on new holder		
		533		
		
		
		ZE.6010 #ambition event for unlanded son.		
		Plus.311 # Destroy extra trade posts gained by non-merchant republics		
		Plus.314 # Triggers removal of Crowned by Pope or Crowned held by old title owner		
		Plus.341 # Check if overthrown ruler is re-inheriting		
		Plus.356 # Removes claims for dead rulers		
		Plus.359 # Removes religion head title if wrong religion		
		
		Plus.1360 # Ruler inherits who has an older bastard sibling		
		Plus.1750 # Ruler inherits kingdom without any of its de jure land		
		Plus.1850 # Decadence check for imperial titles		
		Plus.1853 # Emperor inherits a second imperial title and must choose between them		
		Plus.1901 # Sunni Caliph gains title during Anarchy at Samarra		
		Plus.2289 # Check relations between Greek and Latin Chalcedonian realms		
		Plus.2650 # New nomadic clan holder is different dynasty than previous		
		Plus.3200 # Duke/King title inherited in Imperial realm		
		Plus.1759 # Small demesne modifier		
		Plus.1760 # Overextended republic		
		43305 #handle tyranny for going against council		
		Plus.2111 # Initialization event for Bogomilist laws		
		Plus.368 # Deal with landed Varangians		
		ancrel.144 # Cleanup for a Fian/Son of Gwydion that inherits a title		
		
		SSI.40 #Aztecs conquer X events		
		SSI.41		
		SSI.42		
		SSI.43		
		SSI.44		
		SSI.45		
		SSI.46		
		SSI.47		
		SSI.48		
		PlusFaction.213 # Check for invalidated succession law		
		Plus.364 # Fix Gender + Succession law when passed over		
		
		Plus.366 # Restore original name if title with regnal names is inherited by secular ruler		
		Plus.370 #Gender law Plus		
		Plus.2680 # Clean up pillage flag		
	}			
}				

# ROOT is the character, FROM is the title, FROMFROM is the old holder				
on_new_holder_usurpation = {				
	events = {			
		HL.4999 #Preserve Nomad Culture		
		HL.4996 #Clear Nomad Agitation when conquered by a non-nomad		
		HL.4812 #Clear nomadic pillage holding modifiers upon succession/conquest		
		HL.4811 #Clear the 'Rampaging Nomads'-Modifier when conquered by a non-nomad		
		HL.140 # Landless nomad gains a title.		
		CM.10022		
		60504 # Landless status clean-up for e_mongol_empire.		
		RIP.11715 #Removes crown focus on new holder		
		533		
		
		
		Plus.311 # Destroy extra trade posts gained by non-merchant republics		
		Plus.314 # Triggers removal of Crowned by Pope or Crowned held by old title owner		
		Plus.351 # Adds province chaos modifier		
		Plus.359 # Removes religion head title if wrong religion		
		
		Plus.1850 # Decadence check for imperial titles		
		Plus.1853 # Emperor inherits a second imperial title and must choose between them		
		
		Plus.2650 # New nomadic clan holder is different dynasty than previous		
		emf_nomad.20 # Catch all for empty provinces being usurped		
		Plus.3201 # Duke/King title usurped in Imperial realm		
		Plus.1759 # Small demesne modifier		
		Plus.1760 # Overextended republic		
		43305 #handle tyranny for going against council		
		Plus.2111 # Initialization event for Bogomilist laws		
		Plus.368 # Deal with landed Varangians		
		ancrel.144 # Cleanup for a Fian/Son of Gwydion that inherits a title		
		Plus.2200 # Rome Re-Established		
		
		Plus.2275 # Choosing Latin/Greek Rites for Chalcedonian priests		
		SSI.40 #Aztecs conquer X events		
		SSI.41		
		SSI.42		
		SSI.43		
		SSI.44		
		SSI.45		
		SSI.46		
		SSI.47		
		SSI.48		
		PlusFaction.213 # Check for invalidated succession law		
		Plus.364 # Fix Gender + Succession law when passed over		
		Plus.327 # Convert Latin Empire to Byzantine Empire if the holder is no longer Catholic		
		
		Plus.366 # Restore original name if title with regnal names is inherited by secular ruler		
		Plus.370 #Gender law Plus		
		Plus.2680 # Clean up pillage flag		
	}			
}				

on_unlanded = {				
	events = {			
		HL.130 # Landless nomad clean-up.		
		Plus.305 # Remove Crowned by Pope or Crowned or Uncrowned if not a ruler		
		Plus.3330 # Ruler is unlanded while a relative is away at the capital		
		Plus.309 # Remove Tyrant Trait on non-rulers		
		#Plus.1759 # Small demesne modifier		
		Plus.1760 # Overextended republic		
		Plus.2276 # Removing Latin/Greek Rites for non-priests		
	}			
}				

# From = Attacker, Root = Defender				
on_war_started = {				
	events = {			
		CM.10012		
		Plus.1211 # Coronation cancelled due to war		
		43303 #check for tyranny from going against council		
		Plus.2011 # Cathars are allowed to use holy wars once Catholic holy war is used against them		
		Plus.2754 # Rollo offers to kneel before an attacking Christian king		
		Plus.548 # Rightful religion head is declared war upon by a member of their own religion		
	}			
}				

# From = Attacker, Root = Defender				
on_war_ended_victory = {				
	events = {			
		CM.10038		
		Plus.536 # Bulgaria is not conquered by the Byzantines (flag set in history file -- only valid between 998 and 1018 )		
		SSI.105		
		Plus.518 # Maintenance Check for Failed Invasion (landless or vassal invaders)		
	}			
}				

# From = Attacker, Root = Defender				
on_war_ended_whitepeace = {				
	events = {			
		CM.10040		
		Plus.518 # Maintenance Check for Failed Invasion (landless or vassal invaders)		
	}			
}				

# From = Attacker, Root = Defender				
on_war_ended_defeat = {				
	events = {			
		CM.10041		
		Plus.518 # Maintenance Check for Failed Invasion (landless or vassal invaders)		
	}			
}				

# From = Attacker, Root = Defender				
on_war_ended_invalid = {				
	events = {			
		Plus.518 # Maintenance Check for Failed Invasion (landless or vassal invaders)		
	}			
}				
#added 250277 on on_death		
#character		
on_startup = {		
	events = {	
	}	
}		
#character		
on_yearly_pulse = {		
	events = {	
		reeducation.199 #Choose education path
		reeducation.7 #Courtier Education Trait
		reeducation.8 #Steward Education Trait
		reeducation.9 #Martial Education Trait
		reeducation.10 #No Education Trait
	}	
	random_events = {	
	}	
}	
on_adolescence = { # Checked on 12th birthday.		
	events = {	
		reeducation.20 # Conclave version of reeducation.1
		reeducation.23 # Child is a prodigy
		ZE.12998 # Clear childhood event chain flags
		MNM.3429 # Educator/guardian/parent with secret religion get a chance to convince child to convert secretly
	}	
	random_events = {	
		#1 = reeducation.23 # Child is a prodigy
	}	
}
#childhood - pulse fires at ages 6 years plus six months, 8 years plus six months and 10 years plus six months		
on_childhood_pulse = {		
	events = {	
		reeducation.25 #find better guardian
		
	}	
	
	random_events = {	
		350 = reeducation.11 #Grew up together.
	}	
}		

#adolescence - pulse fires at ages 12 years plus six months and 14 years plus six months		
on_adolescence_pulse = {		
	
	events = {	
		reeducation.25 #find better guardian
		reeducation.11 #Grew up together.
	}	
	
	random_events = {	
		700 = reeducation.11 #Grew up together.
	}	
}		
on_death = {
	events = {
		romeplus.1004
	}
}
on_death = {
	events = {
		plus_adventurer.144 # Adventurer dies while holding the title
	}
}

#character
on_death = {
	events = {
		PlusFaction.205 # Faction maintenance upon ruler death
	}
}

GRANT_LANDED_TITLE_INTERACTION_ACCEPT_EVENT = {
	events = {
		PlusFaction.211 # Fires faction response upon a granted title
	}
}

# ROOT is the character, FROM is the title, FROMFROM is the old holder
on_new_holder = {
	events = {
		PlusFaction.230 # PF: War liege change
		PlusFaction.231 # PF: Rebel drops-out of a civil war due to title loss
		PlusFaction.232 # PF: Rebel drops-out of a civil war due to title gain
		PlusFaction.233 # PF: Loyalist/neutral's liege changes due to title gain
	}
}

# ROOT is the character, FROM is the title, FROMFROM is the old holder
on_new_holder_inheritance = {
	events = {
		PlusFaction.230 # PF: War liege change
		PlusFaction.231 # PF: Rebel drops-out of a civil war due to title loss
		PlusFaction.232 # PF: Rebel drops-out of a civil war due to title gain
		PlusFaction.233 # PF: Loyalist/neutral's liege changes due to title gain
	}
}

# ROOT is the character, FROM is the title, FROMFROM is the old holder
on_new_holder_usurpation = {
	events = {
		PlusFaction.230 # PF: War liege change
		PlusFaction.231 # PF: Rebel drops-out of a civil war due to title loss
		PlusFaction.232 # PF: Rebel drops-out of a civil war due to title gain
		PlusFaction.233 # PF: Loyalist/neutral's liege changes due to title gain
	}
}

on_unlanded = {
	events = {
		PlusFaction.234 # PF: Loyalist/neutral unlanded
	}
}
#character		
on_startup = {		
	events = {	
		parliaments.001
	}	
}		

on_bi_yearly_pulse = {					
	events = {				
		parliaments.001
		
		Plus.1759 # Small demesne modifier		
		Plus.1760 # Overextended republic
	}	
}
	
#on siege pulse		
on_siege_pulse = {		
	random_events = {
		100 = cotc_siege.0
	}
	events = { 	
		coup.140
	} # Defense commander defects	
}		
	
# Fires for a newly elected Doge. FROM is the previous (dying or abdicating) doge.		
on_become_doge = {		
	events = {	
		parliaments.001
	}	
}		
	
# ROOT is the creating character, FROM is the title		
on_create_title = {		
	events = {	
		parliaments.001
	}	
}		
# ROOT is the character, FROM is the title, FROMFROM is the old holder		
on_new_holder = {		
	events = {	
		parliaments.001
	}	
}		
# ROOT is the character, FROM is the title, FROMFROM is the old holder		
on_new_holder_inheritance = {		
	events = {	
		parliaments.001
	}	
}		
# ROOT is the character, FROM is the title, FROMFROM is the old holder		
on_new_holder_usurpation = {		
	events = {	
		parliaments.001
	}	
}
# ROOT is the character, FROM is the title, FROMFROM is the old holder
on_new_holder_inheritance = {
	events = {
		##Events for on_new_holder_inheritance and on_new_holder_usurpation
		dynastic_stability.1
	}
}

# ROOT is the character, FROM is the title, FROMFROM is the old holder
on_new_holder_usurpation = {
	events = {
		##Events for on_new_holder_inheritance and on_new_holder_usurpation
		dynastic_stability.1
	}
}

# I tried using on_yearly_pulse.
# I wasn't happy with the precision, and also it seemed to maybe fire too often?
# So, instead, let's try using a bunch of on_actions to start, and 30-day event timers to continue.

# Might now be an attacker in a civil war
on_war_started             = { events = { FitnaFracture.1 } }  # Forward #2 to the attacker (FROM)
on_new_holder              = { events = { FitnaFracture.2 } }
on_new_holder_inheritance  = { events = { FitnaFracture.2 } }
on_new_holder_usurpation   = { events = { FitnaFracture.2 } }

# Might no longer be an attacker in a civil war
on_war_ended_victory       = { events = { FitnaFracture.6 } }  # Forward #7 to the attacker (FROM)
on_war_ended_whitepeace    = { events = { FitnaFracture.6 } }  # Forward #7 to the attacker (FROM)
on_war_ended_defeat        = { events = { FitnaFracture.6 } }  # Forward #7 to the attacker (FROM)

# In case we missed something above, try to rectify it eventually
#on_startup                 = { events = { FitnaFracture.2  FitnaFracture.7 } }
on_yearly_pulse            = { events = { FitnaFracture.2  FitnaFracture.7 } }

on_startup = {
	events = {
		mod_group.0
	}
}
on_chronicle_start = {
	events = {
		mod_group.0
	}
}
on_siege_won_leader = {
	events = {
		Stuff.107 # Conquers the crusade target
	}
}
#character
#on combat pulse
on_combat_pulse = {
	random_events = {
		250 = 0
		10 = robmodcombat.10001 # I fought very well and earned prestige
		10 = robmodcombat.10002 # I fought poorly and had to be rescued
		10 = robmodcombat.10003 # I fought very well and inspired my men
		10 = robmodcombat.10004 # I ran away and morale suffered
		25 = robmodcombat.10016 # Lose stressed
		25 = robmodcombat.10017 # Lose depressed
		5 = robmodcombat.10009 # duel with enemy commander
		30 = robmodcombat.20002 # I have to be with the vanguard!
		30 = robmodcombat.20003 # I need to gain a more... tactical... position
		300 = robmodcombat.20004 # I can no longer be with the vanguard
		300 = robmodcombat.20005 # I don't want to sit at the rear any more
	}
}

on_war_ended_victory = {
	events = {
		robmodcombat.30003 # Remove war strategy
	}
}

on_war_ended_invalid = {
	events = {
		robmodcombat.30003 # Remove war strategy
	}
}

on_war_ended_whitepeace = {
	events = {
		robmodcombat.30003 # Remove war strategy
	}
}

on_war_ended_defeat = {
	events = {
		robmodcombat.30003 # Remove war strategy
	}
}

on_yearly_pulse = {
	events = {
		robmodcombat.20006 # Remove battlefield position trait
		robmodcombat.30003 # Remove war strategy
		robmodcombat.30004 # Add war strategy to new commanders
		robmodcombat.30005 # Remove war strategy from courtiers when at peace
	}
	
	random_events = {
		300 = 0
		30 = robmodcombat.20007 # Vanguard appreciation
		15 = robmodcombat.20010 # Vanguard criticism - wife
		15 = robmodcombat.20013 # Vanguard criticism - random vassal worried about realm
		20 = robmodcombat.20016 # Middle criticism
		50 = robmodcombat.20019 # Rear criticism
	}
}

# Fires every two years for characters who are members of any society
on_society_bi_yearly_pulse = {
	events = {
		MNM.6199 # Assassins quest tombola
		MNM.7200 # Devil Worshipers quest tombola
		MNM.4000 # Monastic order quest tombola
		MNM.3000 # Secret religious society quest tombola
		MNM.1000 # Hermetics quest tombola
		MNM.7000 # Devil Worshipers: soul corruption chance
		bank.50	 # Banking society quest tombola
	}
	
	random_events = {
		50 = MNM.10020 # Criminal societies: stressed
		100 = MNM.20000 # Devil Worshippers: Orgy
		100 = MNM.20010 # Devil Worshippers: Night on the Town
		75 = MNM.20030 # Devil Worshippers: Grand Summoning
		100 = MNM.20040 # Devil Worshippers: Impersonating Priests
		100 = MNM.20060 # Devil Worshippers: Infernal Choir (only with Rivals)
		75 = MNM.7854 # Devil Worshipers: Demon Hunters Attack
		100 = MNM.6899 # Assassins: friend or foe?
		100 = MNM.6910 # Assassins: assisting a murder plot
		50 = MNM.6920 # Assassins: blackmailing superior
		100 = MNM.3260 # Monastic Orders: Advising a Poet
		100 = MNM.4200 # Monastic Orders: Learning about Roses
		100 = MNM.4210 # Monastic Orders: Fellow member drowsing off
		100 = MNM.4435 # Monastic Orders: Friendship & Love
		100 = MNM.4217 # Monastic Order: Burn heretical books
		50 = MNM.4610 # Monastic Orders: Monastery has Artifact
		100 = MNM.3920 # Secret Religious societies: Worried member
		100 = MNM.3930 # Secret Religious societies: Fellow society member goes for a round
		100 = MNM.3505 # Secret Religious societies: Get help from another member with problematic trait
		100 = MNM.3500 # Secret Religious societies: I am so stressed
		50 = MNM.1620 # Hermetic Society: Divine Summoning
		50 = MNM.1460 # Hermetic Society: Gathering of the Minds
		50 = MNM.5110 # Hermetic Society: Warding off Evil
		50 = MNM.10040 # Every society: Gain rival
		50 = MNM.10043 # Every society: Gain friend (or possibly lover...?)
		150 = 0 # Nothing
	}
}

# A character has switched their society interest
# Root = Character
# From = Society
on_character_switch_society_interest = {
	events = {
		MNM.10010
		MNM.10024 # Backup for refounding societies
	}
}

# A character ranks up in their society, or becomes grandmaster
# Root = Character
# From = Society
on_character_society_rank_up = {
	events = {
		735 # Dark Lord achievement
		736 # Birthright achievement
		737 # Jihad Sultan achievement
		MNM.1750 # Grandmaster notification event
	}
}

# A character ranks down in their society
# Root = Character
# From = Society
on_character_society_rank_down = {
	events = {
	}
}

# A character joins a society. The has_game_started trigger can be useful to avoid firing events from auto-assignment of characters at game start
# Root = Character
# From = Society
on_character_join_society = {
	events = {
	}
}

# A character leaves or is forced to leave a society
# Root = Character
# From = Society
on_character_leave_society = {
	events = {
		MNM.10018 #clears on-going event flags and effects
		MNM.1611 # Clears Apprentice minor titles
		bank.10 #Cashout
	}
}
# A character asks to join a society. Only works on player
# Root = Character
# From = Society
on_character_ask_to_join_society = {
	events = {
		MNM.4450 #Join Monastic Order
		MNM.100 #Join Hermetics
		MNM.10024 # Backup for refounding societies
		bank.66 #Join Bankers
	}
}

# A character is removed from society for failing the potential trigger.
# Root = Character
# From = Society
on_character_kicked_from_society = {
	events = {
		MNM.10021
	}
}

# A character stops showing interest in a society for failing the CanJoin trigger.
# Root = Character
# From = Society
on_character_stop_showing_interest = {
	events = {
		MNM.10019
	}
}

# Someone joins a society that has no members
# Root = Character
# From = Society
on_society_created = {
	events = {
	}
}

# The last member of a society leaves the society and is not replaced
# Root = Character
# From = Society
on_society_destroyed = {
	events = {
	}
}

